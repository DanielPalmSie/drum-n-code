<!DOCTYPE html>
<html>
<head>
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
              integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
              crossorigin="anonymous">

    {% endblock %}
    {% block javascripts %}
        <script>

            let token = localStorage.getItem("JWT_token");

            let sortOrder = 'asc';

            function fetchTasks(status) {
                const taskList = document.getElementById('task-list');
                taskList.innerHTML = ''; // Очищаем список задач перед обновлением

                const url = `/api/task-list?status=${status}&sortOrder=${sortOrder}`;
                fetch(url, {
                    method: 'GET',
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(task => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                        <td>${task.id}</td>
                        <td>${task.title}</td>
                        <td>${task.status}</td>
                        <td>${task.priority}</td>
                        <td>${task.created}</td>
                        <td>${task.completed}</td>
                    `;
                            taskList.appendChild(tr);
                        });
                    })
                    .catch(error => console.error('Error fetching task list:', error));
            }

            function fetchTasksByTitle() {
                const searchInput = document.getElementById('search-input');
                const searchTerm = searchInput.value.trim(); // Убираем лишние пробелы

                const taskList = document.getElementById('task-list');
                taskList.innerHTML = ''; // Очищаем список задач перед обновлением

                if (searchTerm === '') {
                    fetchTasks('all'); // Если поле поиска пустое, показываем все задачи
                    return;
                }

                const url = `/api/task-list?search=${searchTerm}&sortOrder=${sortOrder}`;
                fetch(url, {
                    method: 'GET',
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(task => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                    <td>${task.id}</td>
                    <td>${task.title}</td>
                    <td>${task.status}</td>
                    <td>${task.priority}</td>
                    <td>${task.created}</td>
                    <td>${task.completed}</td>
                `;
                            taskList.appendChild(tr);
                        });
                    })
                    .catch(error => console.error('Error fetching task list:', error));
            }

            function toggleSort(sortField) {
                sortOrder = (sortOrder === 'asc') ? 'desc' : 'asc';

                const taskList = document.getElementById('task-list');
                taskList.innerHTML = ''; // Очищаем список задач перед обновлением

                const url = `/api/task-list?sortBy=${sortField}&sortOrder=${sortOrder}`;
                fetch(url, {
                    method: 'GET',
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(task => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                        <td>${task.id}</td>
                        <td>${task.title}</td>
                        <td>${task.status}</td>
                        <td>${task.priority}</td>
                        <td>${task.created}</td>
                        <td>${task.completed}</td>
                    `;
                            taskList.appendChild(tr);
                        });
                    })
                    .catch(error => console.error('Error fetching task list:', error));
            }
        </script>
        {{ encore_entry_script_tags('app') }}
    {% endblock %}
</head>
<body>
{% block body %}
{% endblock %}
</body>
</html>